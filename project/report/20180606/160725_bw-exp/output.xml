<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20180606 16:07:59.759" generator="Rebot 3.0.2 (Python 2.7.10 on win32)">
<suite source="/usr/local/data/baymax_node/project/test_automation/bw-exp" id="s1" name="Bw-Exp">
<suite source="/usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking.txt" id="s1-s1" name="Expedia-BW-Booking">
<test id="s1-s1-t1" name="TC01.001">
<kw name="booking" library="inner">
<arguments>
<arg>http://172.27.0.63:80/expedia-endpoint/soap</arg>
<arg>8011</arg>
<arg>9011</arg>
</arguments>
<kw name="Test HTTP Client Requests" library="Doraemon">
<doc>Return List</doc>
<assign>
<var>@{HttpRQ}</var>
</assign>
<msg timestamp="20180606 08:07:35.553" level="INFO">/usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.001</msg>
<msg timestamp="20180606 08:07:35.553" level="INFO">@{HttpRQ} = [ /usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.001/HttpRQ1-EXPmakeReservation.xml ]</msg>
<status status="PASS" endtime="20180606 08:07:35.553" starttime="20180606 08:07:35.551"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{HttpProviderRS}=</arg>
<arg>Test HTTP Server Responses</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:35.553" starttime="20180606 08:07:35.553"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{HttpChannelRS}=</arg>
<arg>Test HTTP Server Responses</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:35.554" starttime="20180606 08:07:35.554"></status>
</kw>
<kw name="Test Data" library="Doraemon">
<doc>get test folder or file</doc>
<arguments>
<arg>HttpRS.*-BW.*.xml</arg>
</arguments>
<assign>
<var>@{HttpProviderRS}</var>
</assign>
<msg timestamp="20180606 08:07:35.555" level="INFO">/usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.001</msg>
<msg timestamp="20180606 08:07:35.555" level="INFO">@{HttpProviderRS} = [ /usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.001/HttpRS1-BW.xml ]</msg>
<status status="PASS" endtime="20180606 08:07:35.555" starttime="20180606 08:07:35.554"></status>
</kw>
<kw name="Test Data" library="Doraemon">
<doc>get test folder or file</doc>
<arguments>
<arg>HttpRS.*-EXP.*.xml</arg>
</arguments>
<assign>
<var>@{HttpChannelRS}</var>
</assign>
<msg timestamp="20180606 08:07:35.556" level="INFO">/usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.001</msg>
<msg timestamp="20180606 08:07:35.557" level="INFO">@{HttpChannelRS} = [ /usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.001/HttpRS1-EXP.xml ]</msg>
<status status="PASS" endtime="20180606 08:07:35.557" starttime="20180606 08:07:35.555"></status>
</kw>
<kw name="Run Http Server" library="Doraemon">
<doc>模拟一个HTTP Server，使用这个方法后，可以通过"Get Http Server Request"来获取Server的Request</doc>
<arguments>
<arg>${Http_Port_Provider}</arg>
<arg>200</arg>
<arg>@{HttpProviderRS}</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:35.571" starttime="20180606 08:07:35.557"></status>
</kw>
<kw name="Run Http Server" library="Doraemon">
<doc>模拟一个HTTP Server，使用这个方法后，可以通过"Get Http Server Request"来获取Server的Request</doc>
<arguments>
<arg>${Http_Port_Channel}</arg>
<arg>200</arg>
<arg>@{HttpChannelRS}</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:35.576" starttime="20180606 08:07:35.572"></status>
</kw>
<kw name="Run Http Client" library="Doraemon">
<doc>After use this method ,please use "Get Http Client Responses" to get responses</doc>
<arguments>
<arg>${Http_URL}</arg>
<arg>POST</arg>
<arg>@{HttpRQ}[0]</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:35.587" starttime="20180606 08:07:35.577"></status>
</kw>
<kw name="Get Http Client Responses" library="Doraemon">
<doc>Return response list</doc>
<assign>
<var>@{httpRSActual}</var>
</assign>
<msg timestamp="20180606 08:07:35.687" html="yes" level="INFO">please click &lt;a target="_blank" href="cache/0.480000.txt"&gt;Cache file&lt;/a&gt; to check details</msg>
<msg timestamp="20180606 08:07:35.687" level="INFO">@{httpRSActual} = [ &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header&gt;&lt;Interface xmlns="http://www.newtrade.com/expedia/R14/header" Name="ExpediaDirectConnect" Version="4.0"...</msg>
<status status="PASS" endtime="20180606 08:07:35.687" starttime="20180606 08:07:35.587"></status>
</kw>
<kw name="Get Http Server Request" library="Doraemon">
<doc>get http server reuqest</doc>
<arguments>
<arg>${Http_Port_Provider}</arg>
</arguments>
<assign>
<var>${httpProviderRQActual}</var>
</assign>
<msg timestamp="20180606 08:07:38.771" html="yes" level="INFO">please click &lt;a target="_blank" href="cache/0.490000.txt"&gt;Cache file&lt;/a&gt; to check details</msg>
<msg timestamp="20180606 08:07:38.771" level="INFO">${httpProviderRQActual} = ['&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;SOAP-ENV:Body&gt;&lt;OTA_HotelResNotifRQ xmlns="http://www.opentravel.org/OTA/2003/05" EchoToken="REQ01001"...</msg>
<status status="PASS" endtime="20180606 08:07:38.771" starttime="20180606 08:07:35.687"></status>
</kw>
<kw name="Get Http Server Request" library="Doraemon">
<doc>get http server reuqest</doc>
<arguments>
<arg>${Http_Port_Channel}</arg>
</arguments>
<assign>
<var>${httpChannelRQActual}</var>
</assign>
<msg timestamp="20180606 08:07:49.716" html="yes" level="INFO">please click &lt;a target="_blank" href="cache/0.500000.txt"&gt;Cache file&lt;/a&gt; to check details</msg>
<msg timestamp="20180606 08:07:49.717" level="INFO">${httpChannelRQActual} = ['&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header&gt;&lt;Interface xmlns="http://www.newtrade.com/expedia/R14/header" Name="ExpediaDirectConnect" Version="4.0"...</msg>
<status status="PASS" endtime="20180606 08:07:49.717" starttime="20180606 08:07:38.772"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${expected_HttpProviderRQ}=</arg>
<arg>Test HTTP Server Expected Requests</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:49.717" starttime="20180606 08:07:49.717"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${expected_HttpChannelRQ}=</arg>
<arg>Test HTTP Server Expected Requests</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:49.718" starttime="20180606 08:07:49.718"></status>
</kw>
<kw name="Test Data" library="Doraemon">
<doc>get test folder or file</doc>
<arguments>
<arg>expected-HttpRQ.*-BW.*.xml</arg>
</arguments>
<assign>
<var>${expected_HttpProviderRQ}</var>
</assign>
<msg timestamp="20180606 08:07:49.719" level="INFO">/usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.001</msg>
<msg timestamp="20180606 08:07:49.719" level="INFO">${expected_HttpProviderRQ} = [u'/usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.001/expected-HttpRQ1-BW.xml']</msg>
<status status="PASS" endtime="20180606 08:07:49.719" starttime="20180606 08:07:49.718"></status>
</kw>
<kw name="Test Data" library="Doraemon">
<doc>get test folder or file</doc>
<arguments>
<arg>expected-HttpRQ.*-EXP.*.xml</arg>
</arguments>
<assign>
<var>${expected_HttpChannelRQ}</var>
</assign>
<msg timestamp="20180606 08:07:49.720" level="INFO">/usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.001</msg>
<msg timestamp="20180606 08:07:49.721" level="INFO">${expected_HttpChannelRQ} = [u'/usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.001/expected-HttpRQ1-EXP.xml']</msg>
<status status="PASS" endtime="20180606 08:07:49.721" starttime="20180606 08:07:49.719"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{expected_httpRS}=</arg>
<arg>Test HTTP Client Expected Responses</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:49.721" starttime="20180606 08:07:49.721"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Xml Compare</arg>
<arg>@{httpRSActual}[0]</arg>
<arg>@{expected_httpRS}[0]</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:49.722" starttime="20180606 08:07:49.721"></status>
</kw>
<kw type="for" name="${request} | ${expected_request} IN ZIP [ ${httpProviderRQActual} | ${expected_HttpProviderRQ} ]">
<kw type="foritem" name="${request} = &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&lt;SOAP-ENV:Header/&gt;&lt;SOAP-ENV:Body&gt;&lt;OTA_HotelResNotifRQ xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot; EchoToken=&quot;REQ01001&quot; P..., ${expected_request} = /usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.001/expected-HttpRQ1-BW.xml">
<kw name="Xml Compare" library="Doraemon">
<doc>对比两个XML文件，默认会把XML重复的节点排序</doc>
<arguments>
<arg>${request}</arg>
<arg>${expected_request}</arg>
</arguments>
<msg timestamp="20180606 08:07:49.859" html="yes" level="INFO">please click &lt;a target="_blank" href="compare/0.640000.html"&gt;Compare File&lt;/a&gt; to check details</msg>
<msg timestamp="20180606 08:07:49.860" level="FAIL">XML Compare Failed</msg>
<status status="FAIL" endtime="20180606 08:07:49.860" starttime="20180606 08:07:49.722"></status>
</kw>
<status status="FAIL" endtime="20180606 08:07:49.860" starttime="20180606 08:07:49.722"></status>
</kw>
<status status="FAIL" endtime="20180606 08:07:49.860" starttime="20180606 08:07:49.722"></status>
</kw>
<kw type="for" name="${request} | ${expected_request} IN ZIP [ ${httpChannelRQActual} | ${expected_HttpChannelRQ} ]">
<kw type="foritem" name="${request} = &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&lt;SOAP-ENV:Header&gt;&lt;Interface xmlns=&quot;http://www.newtrade.com/expedia/R14/header&quot; Name=&quot;ExpediaDirectConnect&quot; Version=&quot;4.0&quot;&gt;&lt;..., ${expected_request} = /usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.001/expected-HttpRQ1-EXP.xml">
<kw name="Xml Compare" library="Doraemon">
<doc>对比两个XML文件，默认会把XML重复的节点排序</doc>
<arguments>
<arg>${request}</arg>
<arg>${expected_request}</arg>
</arguments>
<msg timestamp="20180606 08:07:49.877" html="yes" level="INFO">please click &lt;a target="_blank" href="compare/0.660000.html"&gt;Compare File&lt;/a&gt; to check details</msg>
<msg timestamp="20180606 08:07:49.878" level="FAIL">XML Compare Failed</msg>
<status status="FAIL" endtime="20180606 08:07:49.878" starttime="20180606 08:07:49.861"></status>
</kw>
<status status="FAIL" endtime="20180606 08:07:49.878" starttime="20180606 08:07:49.861"></status>
</kw>
<status status="FAIL" endtime="20180606 08:07:49.878" starttime="20180606 08:07:49.860"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${httpProviderRQActual}</arg>
</arguments>
<msg timestamp="20180606 08:07:49.879" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20180606 08:07:49.879" starttime="20180606 08:07:49.878"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${httpProviderRQActual}</arg>
</arguments>
<msg timestamp="20180606 08:07:49.879" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20180606 08:07:49.879" starttime="20180606 08:07:49.879"></status>
</kw>
<status status="FAIL" endtime="20180606 08:07:49.879" starttime="20180606 08:07:35.551"></status>
</kw>
<status status="FAIL" endtime="20180606 08:07:49.880" critical="yes" starttime="20180606 08:07:35.550">Several failures occurred:

1) XML Compare Failed

2) XML Compare Failed</status>
</test>
<test id="s1-s1-t2" name="TC01.002">
<kw name="booking" library="inner">
<arguments>
<arg>http://172.27.0.63:80/expedia-endpoint/soap</arg>
</arguments>
<kw name="Test HTTP Client Requests" library="Doraemon">
<doc>Return List</doc>
<assign>
<var>@{HttpRQ}</var>
</assign>
<msg timestamp="20180606 08:07:49.887" level="INFO">/usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.002</msg>
<msg timestamp="20180606 08:07:49.888" level="INFO">@{HttpRQ} = [ /usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.002/HttpRQ1-EXPmakeReservation.xml ]</msg>
<status status="PASS" endtime="20180606 08:07:49.888" starttime="20180606 08:07:49.886"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{HttpProviderRS}=</arg>
<arg>Test HTTP Server Responses</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:49.888" starttime="20180606 08:07:49.888"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{HttpChannelRS}=</arg>
<arg>Test HTTP Server Responses</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:49.888" starttime="20180606 08:07:49.888"></status>
</kw>
<kw name="Test Data" library="Doraemon">
<doc>get test folder or file</doc>
<arguments>
<arg>HttpRS.*-BW.*.xml</arg>
</arguments>
<assign>
<var>@{HttpProviderRS}</var>
</assign>
<msg timestamp="20180606 08:07:49.889" level="INFO">/usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.002</msg>
<msg timestamp="20180606 08:07:49.890" level="INFO">@{HttpProviderRS} = [ /usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.002/HttpRS1-BW.xml ]</msg>
<status status="PASS" endtime="20180606 08:07:49.890" starttime="20180606 08:07:49.888"></status>
</kw>
<kw name="Test Data" library="Doraemon">
<doc>get test folder or file</doc>
<arguments>
<arg>HttpRS.*-EXP.*.xml</arg>
</arguments>
<assign>
<var>@{HttpChannelRS}</var>
</assign>
<msg timestamp="20180606 08:07:49.891" level="INFO">/usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.002</msg>
<msg timestamp="20180606 08:07:49.891" level="INFO">@{HttpChannelRS} = [ /usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.002/HttpRS1-EXP.xml ]</msg>
<status status="PASS" endtime="20180606 08:07:49.891" starttime="20180606 08:07:49.890"></status>
</kw>
<kw name="Run Http Server" library="Doraemon">
<doc>模拟一个HTTP Server，使用这个方法后，可以通过"Get Http Server Request"来获取Server的Request</doc>
<arguments>
<arg>${Http_Port_Provider}</arg>
<arg>200</arg>
<arg>@{HttpProviderRS}</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:49.899" starttime="20180606 08:07:49.891"></status>
</kw>
<kw name="Run Http Server" library="Doraemon">
<doc>模拟一个HTTP Server，使用这个方法后，可以通过"Get Http Server Request"来获取Server的Request</doc>
<arguments>
<arg>${Http_Port_Channel}</arg>
<arg>200</arg>
<arg>@{HttpChannelRS}</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:49.904" starttime="20180606 08:07:49.900"></status>
</kw>
<kw name="Run Http Client" library="Doraemon">
<doc>After use this method ,please use "Get Http Client Responses" to get responses</doc>
<arguments>
<arg>${Http_URL}</arg>
<arg>POST</arg>
<arg>@{HttpRQ}[0]</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:49.906" starttime="20180606 08:07:49.905"></status>
</kw>
<kw name="Get Http Client Responses" library="Doraemon">
<doc>Return response list</doc>
<assign>
<var>@{httpRSActual}</var>
</assign>
<msg timestamp="20180606 08:07:50.019" html="yes" level="INFO">please click &lt;a target="_blank" href="cache/0.750000.txt"&gt;Cache file&lt;/a&gt; to check details</msg>
<msg timestamp="20180606 08:07:50.019" level="INFO">@{httpRSActual} = [ &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header&gt;&lt;Interface xmlns="http://www.newtrade.com/expedia/R14/header" Name="ExpediaDirectConnect" Version="4.0"...</msg>
<status status="PASS" endtime="20180606 08:07:50.019" starttime="20180606 08:07:49.907"></status>
</kw>
<kw name="Get Http Server Request" library="Doraemon">
<doc>get http server reuqest</doc>
<arguments>
<arg>${Http_Port_Provider}</arg>
</arguments>
<assign>
<var>${httpProviderRQActual}</var>
</assign>
<msg timestamp="20180606 08:07:53.748" html="yes" level="INFO">please click &lt;a target="_blank" href="cache/0.750000.txt"&gt;Cache file&lt;/a&gt; to check details</msg>
<msg timestamp="20180606 08:07:53.749" level="INFO">${httpProviderRQActual} = ['&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header/&gt;&lt;SOAP-ENV:Body&gt;&lt;OTA_HotelResNotifRQ xmlns="http://www.opentravel.org/OTA/2003/05" EchoToken="REQ01002"...</msg>
<status status="PASS" endtime="20180606 08:07:53.749" starttime="20180606 08:07:50.020"></status>
</kw>
<kw name="Get Http Server Request" library="Doraemon">
<doc>get http server reuqest</doc>
<arguments>
<arg>${Http_Port_Channel}</arg>
</arguments>
<assign>
<var>${httpChannelRQActual}</var>
</assign>
<msg timestamp="20180606 08:07:58.727" html="yes" level="INFO">please click &lt;a target="_blank" href="cache/0.750000.txt"&gt;Cache file&lt;/a&gt; to check details</msg>
<msg timestamp="20180606 08:07:58.728" level="INFO">${httpChannelRQActual} = ['&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/"&gt;&lt;SOAP-ENV:Header&gt;&lt;Interface xmlns="http://www.newtrade.com/expedia/R14/header" Name="ExpediaDirectConnect" Version="4.0"...</msg>
<status status="PASS" endtime="20180606 08:07:58.728" starttime="20180606 08:07:53.749"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${expected_HttpProviderRQ}=</arg>
<arg>Test HTTP Server Expected Requests</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:58.728" starttime="20180606 08:07:58.728"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>${expected_HttpChannelRQ}=</arg>
<arg>Test HTTP Server Expected Requests</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:58.729" starttime="20180606 08:07:58.728"></status>
</kw>
<kw name="Test Data" library="Doraemon">
<doc>get test folder or file</doc>
<arguments>
<arg>expected-HttpRQ.*-BW.*.xml</arg>
</arguments>
<assign>
<var>${expected_HttpProviderRQ}</var>
</assign>
<msg timestamp="20180606 08:07:58.730" level="INFO">/usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.002</msg>
<msg timestamp="20180606 08:07:58.730" level="INFO">${expected_HttpProviderRQ} = [u'/usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.002/expected-HttpRQ1-BW.xml']</msg>
<status status="PASS" endtime="20180606 08:07:58.730" starttime="20180606 08:07:58.729"></status>
</kw>
<kw name="Test Data" library="Doraemon">
<doc>get test folder or file</doc>
<arguments>
<arg>expected-HttpRQ.*-EXP.*.xml</arg>
</arguments>
<assign>
<var>${expected_HttpChannelRQ}</var>
</assign>
<msg timestamp="20180606 08:07:58.731" level="INFO">/usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.002</msg>
<msg timestamp="20180606 08:07:58.732" level="INFO">${expected_HttpChannelRQ} = [u'/usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.002/expected-HttpRQ1-EXP.xml']</msg>
<status status="PASS" endtime="20180606 08:07:58.732" starttime="20180606 08:07:58.730"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>@{expected_httpRS}=</arg>
<arg>Test HTTP Client Expected Responses</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:58.732" starttime="20180606 08:07:58.732"></status>
</kw>
<kw name="Comment" library="BuiltIn">
<doc>Displays the given messages in the log file as keyword arguments.</doc>
<arguments>
<arg>Xml Compare</arg>
<arg>@{httpRSActual}[0]</arg>
<arg>@{expected_httpRS}[0]</arg>
</arguments>
<status status="PASS" endtime="20180606 08:07:58.732" starttime="20180606 08:07:58.732"></status>
</kw>
<kw type="for" name="${request} | ${expected_request} IN ZIP [ ${httpProviderRQActual} | ${expected_HttpProviderRQ} ]">
<kw type="foritem" name="${request} = &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&lt;SOAP-ENV:Header/&gt;&lt;SOAP-ENV:Body&gt;&lt;OTA_HotelResNotifRQ xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot; EchoToken=&quot;REQ01002&quot; P..., ${expected_request} = /usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.002/expected-HttpRQ1-BW.xml">
<kw name="Xml Compare" library="Doraemon">
<doc>对比两个XML文件，默认会把XML重复的节点排序</doc>
<arguments>
<arg>${request}</arg>
<arg>${expected_request}</arg>
</arguments>
<msg timestamp="20180606 08:07:58.759" html="yes" level="INFO">please click &lt;a target="_blank" href="compare/0.790000.html"&gt;Compare File&lt;/a&gt; to check details</msg>
<msg timestamp="20180606 08:07:58.760" level="FAIL">XML Compare Failed</msg>
<status status="FAIL" endtime="20180606 08:07:58.760" starttime="20180606 08:07:58.733"></status>
</kw>
<status status="FAIL" endtime="20180606 08:07:58.760" starttime="20180606 08:07:58.733"></status>
</kw>
<status status="FAIL" endtime="20180606 08:07:58.760" starttime="20180606 08:07:58.732"></status>
</kw>
<kw type="for" name="${request} | ${expected_request} IN ZIP [ ${httpChannelRQActual} | ${expected_HttpChannelRQ} ]">
<kw type="foritem" name="${request} = &lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&lt;SOAP-ENV:Header&gt;&lt;Interface xmlns=&quot;http://www.newtrade.com/expedia/R14/header&quot; Name=&quot;ExpediaDirectConnect&quot; Version=&quot;4.0&quot;&gt;&lt;..., ${expected_request} = /usr/local/data/baymax_node/project/test_automation/bw-exp/Expedia-BW-Booking/TC01.002/expected-HttpRQ1-EXP.xml">
<kw name="Xml Compare" library="Doraemon">
<doc>对比两个XML文件，默认会把XML重复的节点排序</doc>
<arguments>
<arg>${request}</arg>
<arg>${expected_request}</arg>
</arguments>
<msg timestamp="20180606 08:07:58.778" html="yes" level="INFO">please click &lt;a target="_blank" href="compare/0.810000.html"&gt;Compare File&lt;/a&gt; to check details</msg>
<msg timestamp="20180606 08:07:58.778" level="FAIL">XML Compare Failed</msg>
<status status="FAIL" endtime="20180606 08:07:58.778" starttime="20180606 08:07:58.761"></status>
</kw>
<status status="FAIL" endtime="20180606 08:07:58.778" starttime="20180606 08:07:58.760"></status>
</kw>
<status status="FAIL" endtime="20180606 08:07:58.778" starttime="20180606 08:07:58.760"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${httpProviderRQActual}</arg>
</arguments>
<msg timestamp="20180606 08:07:58.779" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20180606 08:07:58.779" starttime="20180606 08:07:58.779"></status>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${httpProviderRQActual}</arg>
</arguments>
<msg timestamp="20180606 08:07:58.779" level="INFO">Length is 1</msg>
<status status="PASS" endtime="20180606 08:07:58.779" starttime="20180606 08:07:58.779"></status>
</kw>
<status status="FAIL" endtime="20180606 08:07:58.780" starttime="20180606 08:07:49.886"></status>
</kw>
<status status="FAIL" endtime="20180606 08:07:58.780" critical="yes" starttime="20180606 08:07:49.885">Several failures occurred:

1) XML Compare Failed

2) XML Compare Failed</status>
</test>
<status status="FAIL" endtime="20180606 08:07:58.786" starttime="20180606 08:07:35.545"></status>
</suite>
<status status="FAIL" endtime="20180606 08:07:58.787" starttime="20180606 08:07:35.245"></status>
</suite>
<statistics>
<total>
<stat fail="2" pass="0">Critical Tests</stat>
<stat fail="2" pass="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="2" id="s1" name="Bw-Exp" pass="0">Bw-Exp</stat>
<stat fail="2" id="s1-s1" name="Expedia-BW-Booking" pass="0">Bw-Exp.Expedia-BW-Booking</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
